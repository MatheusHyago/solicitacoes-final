package com.testelemontech.solicitacoes.service;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.testelemontech.solicitacoes.config.WsClient;
import com.testelemontech.solicitacoes.model.ModelRequest;
import com.testelemontech.solicitacoes.repository.ModelRequestRepository;

@Service
public class ModelRequestService {

    private static final Logger logger = LoggerFactory.getLogger(ModelRequestService.class);

    @Autowired
    private WsClient wsClient; // Cliente SOAP para buscar dados

    @Autowired
    private ModelRequestRepository modelRequestRepository;

    /**
     * üîç Lista todas as solicita√ß√µes salvas no banco.
     * @return Lista de ModelRequest.
     */
    public List<ModelRequest> listarTodas() {
        logger.info("üì• Buscando todas as solicita√ß√µes salvas no banco.");
        return modelRequestRepository.findAll();
    }

    /**
     * üîÑ Importa solicita√ß√µes da Lemontech via SOAP e salva no banco.
     * @return Lista de ModelRequest importadas.
     */
    public List<ModelRequest> importarSolicitacoesDaLemontech() {
        logger.info("üîÑ Iniciando importa√ß√£o de solicita√ß√µes da Lemontech...");

        // Define a data inicial como 3 meses atr√°s e a final como hoje
        LocalDateTime dataInicial = LocalDateTime.now().minusMonths(3);
        LocalDateTime dataFinal = LocalDateTime.now();

        // Busca as solicita√ß√µes atrav√©s do WebService SOAP
        List<ModelRequest> solicitacoes = wsClient.buscarProdutosAereos(dataInicial, dataFinal);

        if (!solicitacoes.isEmpty()) {
            modelRequestRepository.saveAll(solicitacoes);
            logger.info("‚úÖ {} solicita√ß√µes foram importadas e salvas.", solicitacoes.size());
        } else {
            logger.warn("‚ö†Ô∏è Nenhuma solicita√ß√£o nova foi encontrada para importar.");
        }

        return solicitacoes;
    }
}
